name: Deploy EKS Cluster

on:
 workflow_dispatch:
      
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
         role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
         aws-region: ${{ secrets.REGION }}

    - name: Check CloudFormation stack status
      id: check_status
      run: |
        STACK_STATUS=$(aws cloudformation describe-stacks --stack-name MyEKSCluster --query "Stacks[0].StackStatus" --output text)
        echo "Stack status: $STACK_STATUS"
        echo "::set-output name=status::$STACK_STATUS"

    - name: Delete CloudFormation stack
      if: steps.check_status.outputs.status != 'CREATE_COMPLETE'
      run: |
        echo "Deleting stack because status is ${{ steps.check_status.outputs.status }}"
        aws cloudformation delete-stack --stack-name MyEKSCluster
        aws cloudformation wait stack-delete-complete --stack-name MyEKSCluster
 
    - name: Deploy EKS using CloudFormation
      run: |
        aws cloudformation deploy \
          --template-file cloudfformation/EKS_setup.yaml \
          --stack-name MyEKSCluster \
          --capabilities CAPABILITY_NAMED_IAM

    - name: Wait for EKS Cluster to be Active
      run: |
        CLUSTER_STATUS=$(aws eks describe-cluster --name MyEKSCluster --query "cluster.status" --output text)
        while [ "$CLUSTER_STATUS" != "ACTIVE" ]; do
          echo "Waiting for EKS Cluster to become ACTIVE..."
          sleep 30
          CLUSTER_STATUS=$(aws eks describe-cluster --name MyEKSCluster --query "cluster.status" --output text)
        done
        echo "EKS Cluster is ACTIVE."

    - name: Update EKS Cluster Endpoint Access
      run: |
        aws eks update-cluster-config \
          --region ${{ secrets.REGION }} \
          --name MyEKSCluster \
          --resources-vpc-config endpointPublicAccess=false,endpointPrivateAccess=true
